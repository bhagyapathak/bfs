--- ext2/file.c	2012-08-12 11:01:04.087035244 +0530
+++ modified_ext2/file.c	2012-08-12 11:00:42.591034753 +0530
@@ -45,7 +45,7 @@
 	int ret;
 	struct super_block *sb = file->f_mapping->host->i_sb;
 	struct address_space *mapping = sb->s_bdev->bd_inode->i_mapping;
-
+	printk (KERN_INFO "linuxKernel101 : ext2_fsync called");
 	ret = generic_file_fsync(file, start, end, datasync);
 	if (ret == -EIO || test_and_clear_bit(AS_EIO, &mapping->flags)) {
 		/* We don't really know where the IO error happened... */
@@ -71,13 +71,31 @@
 	.compat_ioctl	= ext2_compat_ioctl,
 #endif
 	.mmap		= generic_file_mmap,
-	.open		= dquot_file_open,
+	.open		= my_open,
 	.release	= ext2_release_file,
 	.fsync		= ext2_fsync,
 	.splice_read	= generic_file_splice_read,
 	.splice_write	= generic_file_splice_write,
 };
 
+
+int my_open(struct inode *inode, struct file *file)
+{
+       int error;
+       printk (KERN_INFO "linuxKernel101 : Calling my open");
+       return dquot_file_open(inode, file); 
+}       
+
+
 #ifdef CONFIG_EXT2_FS_XIP
 const struct file_operations ext2_xip_file_operations = {
 	.llseek		= generic_file_llseek,
@@ -88,7 +106,7 @@
 	.compat_ioctl	= ext2_compat_ioctl,
 #endif
 	.mmap		= xip_file_mmap,
-	.open		= dquot_file_open,
+	.open		= my_open,
 	.release	= ext2_release_file,
 	.fsync		= ext2_fsync,
 };

--- ext2/ext2.h	2012-08-12 11:01:04.087035244 +0530
+++ modified_ext2/ext2.h	2012-08-12 11:00:42.963034762 +0530
@@ -786,6 +788,11 @@
 extern const struct inode_operations ext2_file_inode_operations;
 extern const struct file_operations ext2_file_operations;
 extern const struct file_operations ext2_xip_file_operations;
+extern int my_open(struct inode *inode, struct file *file); 
