--- /root/src/linux-3.4.6/fs/ext2/ext2.h	2012-08-03 19:14:55.801247253 +0530
+++ ext2.h	2012-08-03 19:14:55.097157766 +0530
@@ -346,6 +346,7 @@
 			__u32	m_i_reserved2[2];
 		} masix2;
 	} osd2;				/* OS dependent 2 */
+	__le32  muid;		/* Field for user who last modified the file */
 };
 
 #define i_size_high	i_dir_acl
@@ -497,7 +498,7 @@
 #define EXT2_CURRENT_REV	EXT2_GOOD_OLD_REV
 #define EXT2_MAX_SUPP_REV	EXT2_DYNAMIC_REV
 
-#define EXT2_GOOD_OLD_INODE_SIZE 128
+#define EXT2_GOOD_OLD_INODE_SIZE 256
 
 /*
  * Feature set definitions
@@ -689,6 +690,7 @@
 	struct mutex truncate_mutex;
 	struct inode	vfs_inode;
 	struct list_head i_orphan;	/* unlinked but open inodes */
+	__le32 muid;
 };
 
 /*
@@ -786,6 +788,7 @@
 extern const struct inode_operations ext2_file_inode_operations;
 extern const struct file_operations ext2_file_operations;
 extern const struct file_operations ext2_xip_file_operations;
+extern int my_open(struct inode *inode, struct file *file); 
 
 /* inode.c */
 extern const struct address_space_operations ext2_aops;
--- /root/src/linux-3.4.6/fs/ext2/file.c	2012-08-03 19:15:39.385786619 +0530
+++ file.c	2012-08-03 19:15:38.814714043 +0530
@@ -45,7 +45,7 @@
 	int ret;
 	struct super_block *sb = file->f_mapping->host->i_sb;
 	struct address_space *mapping = sb->s_bdev->bd_inode->i_mapping;
-
+	printk (KERN_INFO "linuxKernel101 : ext2_fsync called");
 	ret = generic_file_fsync(file, start, end, datasync);
 	if (ret == -EIO || test_and_clear_bit(AS_EIO, &mapping->flags)) {
 		/* We don't really know where the IO error happened... */
@@ -71,7 +71,7 @@
 	.compat_ioctl	= ext2_compat_ioctl,
 #endif
 	.mmap		= generic_file_mmap,
-	.open		= dquot_file_open,
+	.open		= my_open,
 	.release	= ext2_release_file,
 	.fsync		= ext2_fsync,
 	.splice_read	= generic_file_splice_read,
@@ -79,6 +79,15 @@
 };
 
 
+int my_open(struct inode *inode, struct file *file)
+{
+       int error = dquot_file_open(inode, file);
+       printk (KERN_INFO "linuxKernel101 : Calling my open");
+       printk (KERN_INFO "linuxKernel101 : Size of inode %lu", sizeof(struct ext2_inode));
+       return error; 
+}       
+
+
 #ifdef CONFIG_EXT2_FS_XIP
 const struct file_operations ext2_xip_file_operations = {
 	.llseek		= generic_file_llseek,
@@ -89,7 +98,7 @@
 	.compat_ioctl	= ext2_compat_ioctl,
 #endif
 	.mmap		= xip_file_mmap,
-	.open		= dquot_file_open,
+	.open		= my_open,
 	.release	= ext2_release_file,
 	.fsync		= ext2_fsync,
 };
--- /root/src/linux-3.4.6/fs/ext2/inode.c	2012-08-03 19:15:58.154171986 +0530
+++ inode.c	2012-08-03 19:15:57.484086827 +0530
@@ -1350,6 +1350,7 @@
 	ei->i_state = 0;
 	ei->i_block_group = (ino - 1) / EXT2_INODES_PER_GROUP(inode->i_sb);
 	ei->i_dir_start_lookup = 0;
+	ei->muid = raw_inode->muid; 
 
 	/*
 	 * NOTE! The in-memory inode i_data array is in little-endian order
--- /root/src/linux-3.4.6/fs/ext2/modules.order	1970-01-01 05:30:00.000000000 +0530
+++ modules.order	2012-08-03 19:05:38.203379433 +0530
@@ -0,0 +1 @@
+kernel/fs/ext2/ext2.ko
