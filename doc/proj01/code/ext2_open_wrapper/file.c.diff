/* file.c */
--- fs/ext2/file.c  2012-08-03 17:42:31.803633661 +0530
+++ /root/src/linux-3.4.6/fs/ext2/file.c    2012-08-03 17:32:17.685582415 +0530
@@ -45,7 +45,7 @@
    int ret;
    struct super_block *sb = file->f_mapping->host->i_sb;
    struct address_space *mapping = sb->s_bdev->bd_inode->i_mapping;
-   printk (KERN_INFO "linuxKernel101 : ext2_fsync called");
+
    ret = generic_file_fsync(file, start, end, datasync);
    if (ret == -EIO || test_and_clear_bit(AS_EIO, &mapping->flags)) {
        /* We don't really know where the IO error happened... */
@@ -71,7 +71,7 @@
    .compat_ioctl   = ext2_compat_ioctl,
 #endif
    .mmap       = generic_file_mmap,
-   .open       = my_open,
+   .open       = dquot_file_open,
    .release    = ext2_release_file,
    .fsync      = ext2_fsync,
    .splice_read    = generic_file_splice_read,
@@ -79,14 +79,6 @@
 };
 
 
-int my_open(struct inode *inode, struct file *file)
-{
-       int error = dquot_file_open(inode, file);
-       printk( KERN_INFO "linuxKernel101 : Calling my open");
-       return error; 
-}       
-
-
 #ifdef CONFIG_EXT2_FS_XIP
 const struct file_operations ext2_xip_file_operations = {
    .llseek     = generic_file_llseek,
@@ -97,7 +89,7 @@
    .compat_ioctl   = ext2_compat_ioctl,
 #endif
    .mmap       = xip_file_mmap,
-   .open       = my_open,
+   .open       = dquot_file_open,
    .release    = ext2_release_file,
    .fsync      = ext2_fsync,
 };


/* ext2.h */

--- fs/ext2/ext2.h  2012-08-03 17:42:30.618483039 +0530
+++ /root/src/linux-3.4.6/fs/ext2/ext2.h    2012-07-20 00:41:49.000000000 +0530
@@ -786,7 +786,6 @@
 extern const struct inode_operations ext2_file_inode_operations;
 extern const struct file_operations ext2_file_operations;
 extern const struct file_operations ext2_xip_file_operations;
-extern int my_open(struct inode *inode, struct file *file); 
 
 /* inode.c */
 extern const struct address_space_operations ext2_aops;

